name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)
 
trigger:
  batch: true
  branches:
    include:
      - master
 
# Don't run against PRs
pr: none
 
stages :
 
  - stage: deployBicep
    jobs:
      - job: "BicepConfigure"
        steps:
  
          - task: Bash@3
            displayName: 'Install Bicep'
            inputs:
              targetType: inline
              script: |
                curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
                chmod +x ./bicep

          - task: Bash@3
            displayName: 'Build infra template'
            inputs:
              targetType: inLine
              script: |
                #!/bin/bash
                ./bicep build $(System.DefaultWorkingDirectory)/bicep-files/ipaas-infra.bicep
 
          - task: AzureCLI@2
            displayName: 'Validate infra template'
            inputs:
              azureSubscription: 'sp-bicep-deploy'
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              inlineScript: |
                #!/bin/bash
                az deployment group validate -f $(System.DefaultWorkingDirectory)/bicep-files/ipaas-infra.json -g rg-bicep-poc

          - task: AzureCLI@2
            displayName: 'Deploy infra template'
            inputs:
              azureSubscription: 'sp-bicep-deploy'
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              inlineScript: |
                #!/bin/bash
                az deployment group create -f $(System.DefaultWorkingDirectory)/bicep-files/ipaas-infra.json -g rg-bicep-poc

          - task: ARM Outputs@6
            displayName: 'Get infra deployment outputs'
            inputs:
              ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
              ConnectedServiceNameARM: 'sp-bicep-deploy'
              resourceGroupName: 'rg-bicep-poc'
              whenLastDeploymentIsFailed: 'fail'

          - task: Bash@3
            displayName: 'Build systems template'
            inputs:
              targetType: inLine
              script: |
                #!/bin/bash
                ./bicep build $(System.DefaultWorkingDirectory)/bicep-files/ipaas-connections.bicep
 
          - task: AzureCLI@2
            displayName: 'Validate systems template'
            inputs:
              azureSubscription: 'sp-bicep-deploy'
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              inlineScript: |
                #!/bin/bash
                az deployment group validate -f $(System.DefaultWorkingDirectory)/bicep-files/ipaas-connections.json -g rg-bicep-poc -p '{ "logicapp_si_tenantid": {"value": "$(logicapp_si_tenantid)"}, "logicapp_si_objectid": {"value": "$(logicapp_si_objectid)"}, "servicebus_name": {"value": "$(servicebus_name)"}  }'

          - task: AzureCLI@2
            displayName: 'Deploy systems template'
            inputs:
              azureSubscription: 'sp-bicep-deploy'
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              inlineScript: |
                #!/bin/bash
                az deployment group create -f $(System.DefaultWorkingDirectory)/bicep-files/ipaas-connections.json -g rg-bicep-poc -p '{ "logicapp_si_tenantid": {"value": "$(logicapp_si_tenantid)"}, "logicapp_si_objectid": {"value": "$(logicapp_si_objectid)"}, "servicebus_name": {"value": "$(servicebus_name)"}  }'
      
          - task: AzurePowerShell@5
            displayName: 'Generate connections file'
            inputs:
              azureSubscription: 'sp-bicep-deploy'
              ScriptType: FilePath
              ScriptPath: $(System.DefaultWorkingDirectory)/scripts/generate-connections.ps1
              scriptArguments:
                -resourceGroup rg-bicep-poc `
                -outputLocation $(System.DefaultWorkingDirectory)/connections.json
              azurePowerShellVersion: 'LatestVersion'

          - task: Powershell@2
            displayName: 'Combine connections'
            inputs:
              targetType: 'inline'
              script: |
                $json_orig = Get-Content logicapps/connections.json | Out-String | ConvertFrom-Json
                $json_new = Get-Content connections.json | Out-String | ConvertFrom-Json
                $json_new | add-member -Name 'serviceProviderConnections' -value $json_orig.serviceProviderConnections -MemberType NoteProperty
                Set-Content -Path ./connections.json -Value ($json_new | ConvertTo-Json -Depth 100)

          - task: CopyFiles@2
            displayName: 'Create project folder'
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: |
                logicapps/host.json
                logicapps/proxies.json
                connections.json
                logicapps/logic-01-01-messagetoblob/**
                logicapps/logic-01-sendmessagetoservicebus/**
              TargetFolder: 'project_output'
              flattenFolders: true

          - task: ArchiveFiles@2
            displayName: 'Create project zip'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/project_output'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - task: AzureFunctionApp@1
            displayName: 'Deploy logic app workflows'
            inputs:
              azureSubscription: 'sp-bicep-deploy'
              appType: 'functionApp'
              appName: 'ph-bicep-poc-app'
              package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              deploymentMethod: 'zipDeploy'

          #- task: PublishBuildArtifacts@1
          #  inputs:
          #    pathToPublish: 'project_output'
          #    FileCopyOptions: '**/connections.json'

          
